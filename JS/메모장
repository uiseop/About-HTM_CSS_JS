터미널에서 홈 디렉터리를 ~로 표현
ex) cd ~

사용자의 입력은 항상 비동기적이라는 사실
비동기적이란? 간단하게 어떤 작업을 수행하기위해 작업이 들어오기까지 무한정 기다리지않고 다른 작업을 진행하는
즉, 이벤트가 언제 일어날지 프로그래머가 전혀 알 수  없는 이벤트들
ex) 마우스클릭같은

Paper.js는 툴tool 객체를 통해 사용자의 입력을 처리
객체는 이벤트 핸들러를 연결 가능 onMouseDown 이벤트핸들러를 연결
tool.onMouseDown = function(event){
        // var c = Shape.Circle(event.point.x, event.point.y,20)
        x와 y 좌표를 각각 지정하지 않고 클릭한 위치를 바로 넘겨줌
        var c = Shape.Circle(event.point, 20)
        c.fillColor = 'red'
    }

Git : 프로젝트가 커져도 쉽게 관리할 수 있고 다른 개발자와 협력할 수 있게 돕는 버전 컨트롤 도구
Node : 브라우저 밖에서 자바스크립트를 실행할 수 있게 하는 도구.
Gulp : 반복적인 개발 작업을 자동화하는 빌드 도구. Grunt도 널리 쓰임. 이 책에선 걸프 사용
Babel : ES6코드를 ES5코드로 변환하는 트랜스컴파일러
ES린트: 자주 하는 실수를 피하고 더 나은 프로그래머가 되도록 돕는 린트 프로그램

npm install 로컬 패키지를 설치할 때 --save 혹은 --save-dev플래그를 사용
왜 why?? package.json에 설치한 패키지가 자동으로 등록됨

나중에 npm install을 하면 package.json을 통해 dJango의 requirements.txt처럼 필요 라이브러리들이 다운받아짐

보통 JS코드는 js디렉터리나 src디렉터리에 저장해
그런데 이러면 es6로 작성된건지 es5로 작성된건지 명확X => 디렉터리명은 es6로 한다.

서버쪽 코드는 루트의 es6에, 브라우저 코드는 public/es6에 저장하는게 일방적
public이라 명한 이유는 브라우저에 보내는 자바스크립트는 원래 공개된(public)것 임
es6코드와 es5코드를 섞어 놓을 수 없으니 es5를 위한 저장소 필요 -> distribution 의 약자인 dist 디렉터리

바벨 설치는 npm install --save-dev babel-preset-es2015
es5를 es6로 변환하려면 먼저 ese6 변환 프리셋을 설치하고 바벨이 해당 프리셋을 사용하게끔 설정해야한데
.babelrc파일을 생성하고 안에 presets:es2015를 작성 -> 바벨을 쓸때 es6를 사용한다는걸 알려주는것

바벨과 걸프를 함께 사용하여 es6로 작성된 코드는 es5로 바꾸어 dist에 저장되도록 설정한데
gulpfile.js를 수정함

일련의 과정
npm install -g gulp
npm install --save-dev gulp-babel
gulpfile.js 파일 생성하고 안에 
const gulp = require('gulp') 
const babel = require('gulp-babel') 
gulp.task('default',function(){}) 작성 후 gulp실행하면 gulpfile.js 실행됨
# babel-core, babel-cli 설치
$ npm install --save-dev @babel/core @babel/cli
# env preset 설치
$ npm install --save-dev @babel/preset-env
.babelrc파일을 생성하고 
{
  "presets": ["@babel/preset-env"]
} 코드를 작성
(걸프를 안쓰는 법은 package.json 의 scripts안에
"scripts": {
    "build": "babel src/js -w -d dist/js"
  }
  를 작성 --> npm script는 src/js 폴더에 있는 모든 es6파일을 트랜스파일링한 후 결과물을 dist/js에 저장
  -w 는 타깃 폴더를 watch하여 자동으로 트랜스파일한다
  -d 는 트랜스파일링된 겨로가물을 out-dir하여 저장될 폴더를 지정)

